* Project Overview
This project is designed to enhance the educational experience by integrating a gamification learning application with Canvas LMS using LTI. Built in the Godot game engine and deployed as a web application, this software transforms traditional learning modules into engaging and interactive games, fostering motivation and collaboration among students.

* Project Architecture
The architecture of our application consists of several key components that work together to provide a seamless user experience. Below are the primary layers of the system:

** Godot Web App:
- Interactive frontend for users.
- Communicates with the backend via API.

** Docker Services:
Contains the necessary services for the application to run smoothly:
- MySQL Server: Manages data storage.
- Canvas LMS: Provides an environment for testing and integration.
- Custom API: Facilitates communication between the Godot app and the database.
- Any more services we may need later on.

* Required Software
To successfully develop, deploy, and run the gamification learning software integrated with Canvas LMS, several software components are required. This includes development tools, libraries, and server environments. Below is a detailed list of each required software component.

** Godot Engine 3.6
Purpose: Game development engine for creating the interactive web application.

- *Features*:
  - Supports 2D and 3D game development.
  - User-friendly interface and robust scripting capabilities.

** Git
Purpose: Version control system for tracking changes to the codebase.

- *Features*:
  - Facilitates collaboration among developers.
  - Supports branching and merging.

** Docker
Purpose: Containerization platform for packaging and deploying the application.

- *Features*:
  - Creates isolated environments for different components (e.g., database, API).
  - Simplifies dependency management and deployment.

* Getting Started
** Our Repository is Located at GitHub
- Clone the repository to a desired folder.

** Godot
1. Open Godot and click *Import*.
2. Click *Browse* and navigate to the folder of the repository.
3. Go into the `Godot` folder in the repository.
4. Select the `project.godot` file.
5. Click *Open*.

** Docker
1. Open the repository folder in your Terminal.
2. Navigate to the `docker` folder.
3. Start Docker Compose.

** Contributing
- If you make changes, open a *Pull Request*.
