networks:
    db-network:
        driver: bridge

volumes:
    database:

services:
    web:
        image: "nginx:latest"
        restart: "always"
        ports:
            - "80:80"
        volumes:
            - "./web/http:/usr/share/nginx/html"
            - "./web/nginx.conf:/etc/nginx/nginx.conf"
        depends_on:
            - "database-api"
            - "godot-export"
        networks:
            - "db-network"

    db:
        image: "mysql"
        container_name: "db"
        restart: "always"
        expose:
            - "3306"
        volumes:
            - "database:/var/lib/mysql"
            - "./db:/docker-entrypoint-initdb.d" # Mount the init script directory
        environment:
            - "MYSQL_DATABASE=database"
            - "MYSQL_USER=user"
            - "MYSQL_PASSWORD=password"
            - "MYSQL_ROOT_PASSWORD=rootpassword"
        networks:
            - "db-network"

    database-api:
        build: ./database-api # Pointing to the directory where the Node.js app is located
        restart: "always"
        ports:
            - "3000:3000"
        expose:
            - "3000"
        environment:
            - "DB_HOST=db"
            - "DB_USER=user"
            - "DB_PASSWORD=password"
            - "DB_NAME=database"
        depends_on:
            - "db"
        networks:
            - "db-network"

    canvas:
        image: "lbjay/canvas-docker"
        container_name: "canvas"
        restart: "always"
        ports:
            - "3125:3000"

    godot-export:
        build:
            context: .
            dockerfile: "./godot-export/Dockerfile"
            args:
                - "GODOT_VERSION=3.6-stable"
                - "GODOT_VERSION_DIR=3.6.stable"
                - "EXPORT_NAME=HTML5"
                - "OUTPUT_FILENAME=index.html"
        restart: "no"
        volumes:
            - "../godot:/build/src"
            - "./web/http:/build/output"
